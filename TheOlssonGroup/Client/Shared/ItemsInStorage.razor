@using Blazored.LocalStorage
@using TheOlssonGroup.Client.Service.CartServiceClient
@inject ICartServiceClient cartService
@inject ISyncLocalStorageService localStorage
@implements IDisposable
<a href="cart" class="btn btn-info">
    <i class="oi oi-cart"></i>
    <span class="badge">@GetCartItemsCount()</span>
    <span class="text-white-100">Cart</span>
</a>

@code {
    private int GetCartItemsCount()
    {
        var cart = localStorage.GetItem<List<CartItem>>("cart");
        return cart != null ? cart.Sum(x => x.Quantity) : 0;
    }

     
    protected override void OnInitialized()
    {
        cartService.OnChange += StateHasChanged;
    }
    public void Dispose()
    {
        cartService.OnChange -= StateHasChanged;
    }
}
