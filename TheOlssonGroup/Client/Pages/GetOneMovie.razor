@page "/product/{id:int}"
@using MudBlazor
@using TheOlssonGroup.Client.Service.CartServiceClient
@using TheOlssonGroup.Client.Service.Contratct
@inject IMovieServiceClient movieService
@inject ICartServiceClient cartServiceClient

@if (movie == null)
{
    <span>@message</span>
}
else
{
    <div class="container  h-100 ">


        <div class="card mb-3 justify-content-center align-items-center ">
            <div class="row  ">
                <div class="col-md-4">
                    <img src="@movie.PosterImageUrl" class="img-fluid " alt="...">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">Title: @movie.Title</h5>
                        <h5 class="card-title mt-5">Short Description:</h5>
                        <p class="card-text mt-2" style="max-width:300px;">@movie.ShortDescription</p>
                        <h5 class="card-text mt-5">Description:</h5>
                        <p class="card-text mt-2" style="max-width:300px;">@movie.LongDescription</p>
                        <h4 class="card-text mt-4"><small class="text-muted">$@movie.Price</small></h4>
                        <a class="mt-5 ms-5 btn btn-outline-primary" @onclick="AddItemForCheckout"><i class="oi oi-cart">&nbsp;&nbsp; Add To Basket</i></a>
                    </div>
                </div>
            </div>
        </div>

    </div>











}


@code {
    private Movie? movie = null;
    private string message = string.Empty;

    [Parameter]
    public int Id { get; set; }

    private async Task AddItemForCheckout()
    {
        var cartItem = new CartItem
            {
                MovieId = movie.Id,
                Image = movie.PosterImageUrl,
                Price = movie.Price,
                Title = movie.Title
            };
        await cartServiceClient.AddToCart(cartItem);
    }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading movies...";

        var result = await movieService.GetSingleMovie(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            movie = result.Data;
        }
    }
}