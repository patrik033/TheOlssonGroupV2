@page "/delete/{id:int}"
@inject IMovieServiceClient movieService
@inject IAdminService adminService
@using TheOlssonGroup.Client.Service.AdminServices
@inject NavigationManager navManager
@inject HttpClient http



<h3>Delete Movie</h3>

 <div class="ms-5">
        <div class="card mb-3" style="max-width: 740px">
            <div class="row g-0">
                <div class="col-md-4">
                    <img src="@movie.PosterImageUrl" class="img-fluid rounded-start" alt="@movie.Title">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">@movie.Title</h5>
                        <p class="card-text mt-5">@movie.ShortDescription</p>
                        <h4 class="card-text mt-4"><small class="text-muted">$@movie.Price</small></h4>
                    </div>
                </div>
            </div>
        </div>
        <h4 class="text-center mt-5 text-wrap" style="max-width: 740px">@movie.LongDescription</h4>
    </div>



<button class="btn btn-danger" @onclick="DeleteMovie">Delete</button>
<button class="btn btn-primary" @onclick="GoBack">Go Back</button>


@code {
    private Movie? movie = new Movie();
    private string message = string.Empty;

    [Parameter]
    public int Id { get; set; }


    public async Task DeleteMovie()
    {
        await adminService.Delete(Id);
        navManager.NavigateTo("index");
    }
    private void GoBack()
    {
        navManager.NavigateTo("/index");
    }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading movies...";

        var result = await movieService.GetSingleMovie(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            movie = result.Data;
        }
    }
}
